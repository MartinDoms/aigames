import{m as s}from"./module.esm-Cm4okMZt.js";document.addEventListener("alpine:init",()=>{s.data("numberSequence",()=>({loading:!0,currentSequence:[],currentHint:"",userAnswer:"",showResult:!1,isCorrect:!1,correctAnswer:null,resultMessage:"",showHint:!1,score:0,streak:0,stats:{total:0,correct:0,incorrect:0},init(){this.loadStats(),this.newPuzzle()},async newPuzzle(){this.loading=!0,this.showResult=!1,this.showHint=!1,this.userAnswer="",this.currentHint="",this.isCorrect=!1,this.correctAnswer=null,this.resultMessage="";try{const t=await fetch("/api/number-sequence/new-puzzle");if(t.ok){const e=await t.json();this.currentSequence=e.sequence,this.currentHint=e.hint,this.correctAnswer=e.nextValue}else console.error("Failed to fetch new puzzle"),this.currentSequence=[2,4,6,8,10],this.currentHint="Each number increases by 2",this.correctAnswer=12}catch(t){console.error("Error fetching puzzle:",t),this.currentSequence=[2,4,6,8,10],this.currentHint="Each number increases by 2",this.correctAnswer=12}this.loading=!1},async submitAnswer(){if(!this.userAnswer||this.userAnswer==="")return;const t=parseInt(this.userAnswer);this.isCorrect=t===this.correctAnswer,this.stats.total++,this.isCorrect?(this.stats.correct++,this.streak++,this.score+=10+(this.streak-1)*2,this.resultMessage=this.getCorrectMessage()):(this.stats.incorrect++,this.streak=0,this.resultMessage="Not quite right!"),this.saveStats(),this.showResult=!0},getCorrectMessage(){const t=["Excellent! You got it!","Perfect! Well done!","Great job! You found the pattern!","Awesome! You're on fire!","Outstanding! Keep it up!","Brilliant! You nailed it!"];return t[Math.floor(Math.random()*t.length)]},nextPuzzle(){this.newPuzzle()},getHint(){this.showHint=!0},hideCurrentHint(){this.showHint=!1},getDifficultyName(){return this.score<50?"Beginner":this.score<150?"Intermediate":this.score<300?"Advanced":"Expert"},getAccuracy(){return this.stats.total===0?"0%":Math.round(this.stats.correct/this.stats.total*100)+"%"},handleKeyPress(t){t.key==="Enter"&&!this.showResult&&this.submitAnswer()},loadStats(){const t=localStorage.getItem("numberSequenceStats");if(t){const e=JSON.parse(t);this.score=e.score||0,this.streak=e.streak||0,this.stats=e.stats||{total:0,correct:0,incorrect:0}}},saveStats(){const t={score:this.score,streak:this.streak,stats:this.stats};localStorage.setItem("numberSequenceStats",JSON.stringify(t))}}))});
//# sourceMappingURL=number-sequence-DmE7JCgG.js.map
